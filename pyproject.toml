[project]
name = "template"
version = "1.0.0"
description = ""
authors = [{ name = "Tomas Sanchez", email = "info@tomsanchez.com.ar" }]
readme = "README.md"
requires-python = ">=3.10,<4.0"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn>=0.34.0",
    "pydantic-settings>=2.9.0",
    "pydantic[email]>=2.11.0",
]

[dependency-groups]
dev = [
    "pytest>=8.4.0",
    "coverage[toml]>=7.9.0",
    "pre-commit>=4.2.0",
    "httpx>=0.28.0",
    "pytest-cov>=6.2.0",
    "ruff",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.ruff]
line-length = 120
target-version = "py311"

[tool.ruff.lint]
select = [
    # flake8-2020
    "YTT",
    # flake8-bandit
    "S",
    # flake8-bugbear
    "B",
    # flake8-builtins
    "A",
    # flake8-comprehensions
    "C4",
    # flake8-debugger
    "T10",
    # flake8-simplify
    "SIM",
    # isort
    "I",
    # mccabe
    "C90",
    # pycodestyle
    "E", "W",
    # pyflakes
    "F",
    # pygrep-hooks
    "PGH",
    # pyupgrade
    "UP",
    # ruff
    "RUF",
    # tryceratops
    "TRY",
]
# Some pydocstyle rules are disabled because they are often too verbose.
ignore = [
    "D100",
    "D104",
    "D107",
    # LineTooLong
    "E501",
    # DoNotAssignLambda
    "E731",
]

[tool.ruff.lint.per-file-ignores]
"tests/*" = ["S101"]

[tool.ruff.lint.isort]
known-first-party = ["template"]

[tool.coverage.run]
branch = true
omit = ['tests/*', 'src/template/asgi.py', 'src/**/__init__.py']

[tool.coverage.report]
show_missing = true
ignore_errors = true
exclude_lines = ["pragma: no cover", "raise NotImplementedError", "if TYPE_CHECKING:", "if __name__ == .__main__.:"]


[tool.pytest.ini_options]
pythonpath = ["src"]
testpaths = ["tests"]
python_files = "test_*.py"
junit_family = "xunit1"
log_cli = false
log_level = "DEBUG"
